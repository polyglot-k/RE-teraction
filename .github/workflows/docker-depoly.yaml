name: Docker Build and Deploy

on:
  workflow_run:
    workflows: [ "app-ci-build" ]
    types:
      - completed
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: kangtaehyun1107/re_teraction:${{ github.sha }}
          cache-from: type=registry,ref=kangtaehyun1107/re_teraction:cache
          cache-to: type=registry,ref=kangtaehyun1107/re_teraction:cache,mode=max
      - name: Copy deploy.sh to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./deploy.sh"
          target: "/home/ubuntu/app/deploy.sh"

      - name: Run deploy.sh on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            chmod +x /home/ubuntu/app/deploy.sh
            /home/ubuntu/app/deploy.sh

